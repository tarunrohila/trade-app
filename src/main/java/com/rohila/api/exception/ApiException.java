package com.rohila.api.exception;

import com.rohila.api.response.Message;
import org.springframework.http.HttpStatus;

import java.util.ArrayList;
import java.util.List;

/**
 * Class file to create cutomise excpetion of {@link ApiException}
 *
 * @author Tarun Rohila
 */
public abstract class ApiException extends RuntimeException {

    /**
     * Autogenerated serial version id
     */
    private static final long serialVersionUID = 398313574589638790L;

    /**
     * Variable declaration for messages
     */
    private List<Message> messages = new ArrayList<>();

    /**
     * Variable declaration for throwable
     */
    private Throwable throwable;

    /**
     * Constructor declaration
     *
     * @param message - message
     */
    public ApiException(Message message) {
        super(message.getTitle());
        this.messages.add(message);
    }

    /**
     * Constructor declaration
     *
     * @param message   - message
     * @param throwable - throwable
     */
    public ApiException(Message message, Throwable throwable) {
        super(message.getTitle(), throwable);
        this.messages.add(message);
        this.throwable = throwable;
    }

    /**
     * Constructor declaration
     *
     * @param messages - messages
     */
    public ApiException(List<Message> messages) {
        super(messages.get(0).getTitle());
        this.messages.addAll(messages);
    }

    /**
     * Method to get status
     *
     * @return status
     */
    public abstract HttpStatus getStatus();

    /**
     * Method to get first message
     *
     * @return first message
     */
    public Message getFirstMessage() {
        return messages.get(0);
    }

    /**
     * Method to return messages
     *
     * @return messages
     */
    public List<Message> getMessages() {
        return this.messages;
    }

    /**
     * Method to get throwable
     *
     * @return throwable
     */
    public Throwable getThrowable() {
        return this.throwable;
    }
}
